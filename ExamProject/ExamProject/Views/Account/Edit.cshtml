@model ExamProject.Models.AccountEditModel

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <div class="well">
        <h2 class="paddedheader">Edit User</h2>
        @Html.ValidationSummary()
        @Html.AntiForgeryToken()

        @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "control-label col-sm-4" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.FullName, new { @class = "control-label col-sm-4" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label col-sm-4" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label col-sm-4" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label col-sm-4" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Gender, new { @class = "col-sm-4 control-label" })
                <div class="col-sm-4">
                    @Html.RadioButtonFor(m => m.Gender, "Male")  Male
                    @Html.RadioButtonFor(m => m.Gender, "Female")  Female
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Birthday, new { @class = "col-sm-4 control-label" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(m => m.Birthday, new { @class = "form-control" })
                    <div class="col-sm-12 text-muted small">
                        Birthday must be in format "MM/DD/YYYY"
                    </div>
                </div>

            </div>

            if (this.User.IsInRole("Admin"))
            {
            <div class="form-group">
                @for (int i = 0; i < Model.Roles.Count; i++)
                {
                    <div class="col-sm-offset-4 col-sm-4">
                        @Html.HiddenFor(m => m.Roles[i].Name)
                        @Html.CheckBoxFor(m => m.Roles[i].IsSelected)
                        @Model.Roles[i].Name
                    </div>
                }
            </div>
            }

            <div class="form-group">
                <div class="col-sm-4 col-sm-offset-4">
                    <input type="submit" value="Edit" class="btn btn-success" />
                </div>
            </div>
        }
    </div>
</div>
